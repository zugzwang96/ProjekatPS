/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package root.view.form;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableRowSorter;
import root.domain.Trotinet;
import root.domain.Zaposleni;
import root.kontroler.Kontroler;
import root.niti.OsveziNitTrotinet;
import root.view.form.komponente.tabele.ModelTabeleTrotineti;

/**
 *
 * @author Bane
 */
public class FrmTrotinetiPretraga extends javax.swing.JFrame {
    
    private Zaposleni ulogovaniZ;

    public Zaposleni getUlogovaniZ() {
        return ulogovaniZ;
    }

    public void setUlogovaniZ(Zaposleni ulogovaniZ) {
        this.ulogovaniZ = ulogovaniZ;
    }
    
    

    /**
     * Creates new form FrmTrotinetiPretraga
     */
    public FrmTrotinetiPretraga() {
        initComponents();
        OsveziNitTrotinet ont = new OsveziNitTrotinet(this);
        ont.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTrotineti = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Trotineti");

        jLabel1.setText("Filter: ");

        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
        });

        tabelaTrotineti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaTrotineti);

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 855, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDodaj)
                        .addGap(32, 32, 32)
                        .addComponent(btnIzmeni)
                        .addGap(29, 29, 29)
                        .addComponent(btnObrisi)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased
        String query = txtFilter.getText();
        filtrirajTabelu(query);
    }//GEN-LAST:event_txtFilterKeyReleased

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        FrmTrotinet frt = new FrmTrotinet(this, true);
        frt.setLocationRelativeTo(this);
        frt.pack();
        frt.setZaposleni(ulogovaniZ);
        frt.setVisible(true);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
       
           if(tabelaTrotineti.getSelectedRow()==-1){
               JOptionPane.showMessageDialog(this, "Morate selektovati trotinet u tabeli!","Izmena trotineta",JOptionPane.ERROR_MESSAGE);
           }
           
           int red = tabelaTrotineti.getSelectedRow();
           int pravired = tabelaTrotineti.convertRowIndexToModel(red);
           
           if(pravired!=-1){
           ModelTabeleTrotineti mtt = (ModelTabeleTrotineti) tabelaTrotineti.getModel();
           Trotinet izabraniTrotinet = mtt.dajIzabraniTrotinet(pravired);
           FrmTrotinetIzmena fti = new FrmTrotinetIzmena(this, true);
           fti.srediFormu(izabraniTrotinet);
           fti.setLocationRelativeTo(this);
           fti.pack();
           fti.setUlogovani(ulogovaniZ);
           fti.setVisible(true);
           }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
           if(tabelaTrotineti.getSelectedRow()==-1){
               JOptionPane.showMessageDialog(this, "Morate selektovati trotinet u tabeli!","Izmena trotineta",JOptionPane.ERROR_MESSAGE);
           }
           
           int red = tabelaTrotineti.getSelectedRow();
           int pravired = tabelaTrotineti.convertRowIndexToModel(red);
           
           if(pravired!=-1){
           ModelTabeleTrotineti mtt = (ModelTabeleTrotineti) tabelaTrotineti.getModel();
           Trotinet izabraniTrotinet = mtt.dajIzabraniTrotinet(pravired);
           try {
            Kontroler.getInstance().obrisiTrotinet(izabraniTrotinet);
            JOptionPane.showMessageDialog(this, "Trotinet uspesno obrisan!\n", "Brisanje trotineta", JOptionPane.INFORMATION_MESSAGE);
           } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom brisanja!\n" + ex.getMessage(), "Brisanje trotineta", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmKorisnikIzmena.class.getName()).log(Level.SEVERE, null, ex);

            }
      }
           
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaTrotineti;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables

    public void srediTabelu() {    
       List<Trotinet> trotineti = Kontroler.getInstance().vratiSveTrotinete();
        ModelTabeleTrotineti mtt = new ModelTabeleTrotineti(trotineti);
        tabelaTrotineti.setModel(mtt);
    }
    
        private void filtrirajTabelu(String query) {
        ModelTabeleTrotineti mtt = (ModelTabeleTrotineti) tabelaTrotineti.getModel();
        TableRowSorter<AbstractTableModel> tr = new TableRowSorter<AbstractTableModel>(mtt);
        tabelaTrotineti.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));

    }

}
